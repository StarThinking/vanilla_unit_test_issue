2020-12-03 07:21:27,383 [main] INFO  common.Util (Util.java:isDiskStatsEnabled(395)) - dfs.datanode.fileio.profiling.sampling.percentage set to 0. Disabling file IO profiling
2020-12-03 07:21:27,416 [main] INFO  blockmanagement.DatanodeManager (DatanodeManager.java:<init>(303)) - dfs.block.invalidate.limit: configured=1000, counted=60, effected=1000
2020-12-03 07:21:27,416 [main] INFO  blockmanagement.DatanodeManager (DatanodeManager.java:<init>(311)) - dfs.namenode.datanode.registration.ip-hostname-check=true
2020-12-03 07:21:27,429 [main] INFO  blockmanagement.BlockManager (InvalidateBlocks.java:printBlockDeletionTime(79)) - dfs.namenode.startup.delay.block.deletion.sec is set to 000:00:00:00.000
2020-12-03 07:21:27,431 [main] INFO  blockmanagement.BlockManager (InvalidateBlocks.java:printBlockDeletionTime(85)) - The block deletion will start around 2020 Dec 03 07:21:27
2020-12-03 07:21:27,434 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(395)) - Computing capacity for map BlocksMap
2020-12-03 07:21:27,434 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(396)) - VM type       = 64-bit
2020-12-03 07:21:27,437 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(397)) - 2.0% max memory 1.9 GB = 39.3 MB
2020-12-03 07:21:27,437 [main] INFO  util.GSet (LightWeightGSet.java:computeCapacity(402)) - capacity      = 2^22 = 4194304 entries
2020-12-03 07:21:27,458 [main] INFO  blockmanagement.BlockManager (BlockManager.java:createSPSManager(5183)) - Storage policy satisfier is disabled
2020-12-03 07:21:27,459 [main] INFO  blockmanagement.BlockManager (BlockManager.java:createBlockTokenSecretManager(595)) - dfs.block.access.token.enable = false
2020-12-03 07:21:27,470 [main] INFO  Configuration.deprecation (Configuration.java:logDeprecation(1395)) - No unit for dfs.namenode.safemode.extension(30000) assuming MILLISECONDS
2020-12-03 07:21:27,472 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(161)) - dfs.namenode.safemode.threshold-pct = 0.9990000128746033
2020-12-03 07:21:27,473 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(162)) - dfs.namenode.safemode.min.datanodes = 0
2020-12-03 07:21:27,473 [main] INFO  blockmanagement.BlockManagerSafeMode (BlockManagerSafeMode.java:<init>(164)) - dfs.namenode.safemode.extension = 30000
2020-12-03 07:21:27,475 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(581)) - defaultReplication         = 3
2020-12-03 07:21:27,477 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(582)) - maxReplication             = 512
2020-12-03 07:21:27,477 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(583)) - minReplication             = 1
2020-12-03 07:21:27,477 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(584)) - maxReplicationStreams      = 2
2020-12-03 07:21:27,478 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(585)) - redundancyRecheckInterval  = 3000ms
2020-12-03 07:21:27,478 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(586)) - encryptDataTransfer        = false
2020-12-03 07:21:27,478 [main] INFO  blockmanagement.BlockManager (BlockManager.java:<init>(587)) - maxNumBlocksToLog          = 1000
2020-12-03 07:21:27,518 [main] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID s6 for DN 6.6.6.6:9866
2020-12-03 07:21:27,521 [main] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID s5 for DN 5.5.5.5:9866
2020-12-03 07:21:27,522 [main] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID s4 for DN 4.4.4.4:9866
2020-12-03 07:21:27,522 [main] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID s3 for DN 3.3.3.3:9866
2020-12-03 07:21:27,522 [main] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID s2 for DN 2.2.2.2:9866
2020-12-03 07:21:27,523 [main] INFO  blockmanagement.DatanodeDescriptor (DatanodeDescriptor.java:updateStorage(987)) - Adding new storage ID s1 for DN 1.1.1.1:9866
2020-12-03 07:21:27,532 [main] INFO  hdfs.StateChange (DatanodeManager.java:registerDatanode(1042)) - BLOCK* registerDatanode: from DatanodeRegistration(1.1.1.1:9866, datanodeUuid=4f4c6b82-6213-4a65-8d2e-7264a025f7d6, infoPort=9864, infoSecurePort=9865, ipcPort=9867, storageInfo=null) storage 4f4c6b82-6213-4a65-8d2e-7264a025f7d6
2020-12-03 07:21:27,534 [main] WARN  net.ScriptBasedMapping (ScriptBasedMapping.java:runResolveCommand(254)) - Exception running "need to set a dummy value here so it assumes a multi-rack cluster" 1.1.1.1 
java.io.IOException: Cannot run program "need to set a dummy value here so it assumes a multi-rack cluster" (in directory "/root/hadoop-3.2.1-src/hadoop-hdfs-project/hadoop-hdfs"): error=2, No such file or directory
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)
	at org.apache.hadoop.util.Shell.runCommand(Shell.java:938)
	at org.apache.hadoop.util.Shell.run(Shell.java:901)
	at org.apache.hadoop.util.Shell$ShellCommandExecutor.execute(Shell.java:1213)
	at org.apache.hadoop.net.ScriptBasedMapping$RawScriptBasedMapping.runResolveCommand(ScriptBasedMapping.java:251)
	at org.apache.hadoop.net.ScriptBasedMapping$RawScriptBasedMapping.resolve(ScriptBasedMapping.java:188)
	at org.apache.hadoop.net.CachedDNSToSwitchMapping.resolve(CachedDNSToSwitchMapping.java:119)
	at org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager.resolveNetworkLocation(DatanodeManager.java:923)
	at org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager.resolveNetworkLocation(DatanodeManager.java:904)
	at org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager.resolveNetworkLocationWithFallBackToDefaultLocation(DatanodeManager.java:878)
	at org.apache.hadoop.hdfs.server.blockmanagement.DatanodeManager.registerDatanode(DatanodeManager.java:1133)
	at org.apache.hadoop.hdfs.server.blockmanagement.TestBlockManager.testFullBR(TestBlockManager.java:893)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.lang.UNIXProcess.forkAndExec(Native Method)
	at java.lang.UNIXProcess.<init>(UNIXProcess.java:247)
	at java.lang.ProcessImpl.start(ProcessImpl.java:134)
	at java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)
	... 37 more
2020-12-03 07:21:27,539 [main] ERROR blockmanagement.DatanodeManager (DatanodeManager.java:resolveNetworkLocation(907)) - The resolve call returned null!
2020-12-03 07:21:27,540 [main] ERROR blockmanagement.DatanodeManager (DatanodeManager.java:resolveNetworkLocationWithFallBackToDefaultLocation(880)) - Unresolved topology mapping. Using /default-rack for host host
2020-12-03 07:21:27,541 [main] INFO  net.NetworkTopology (NetworkTopology.java:add(145)) - Adding a new node: /default-rack/1.1.1.1:9866
2020-12-03 07:21:27,541 [main] INFO  blockmanagement.BlockReportLeaseManager (BlockReportLeaseManager.java:registerNode(204)) - Registered DN 4f4c6b82-6213-4a65-8d2e-7264a025f7d6 (1.1.1.1:9866).
2020-12-03 07:21:27,548 [main] INFO  net.NetworkTopology (NetworkTopology.java:add(145)) - Adding a new node: /rackA/1.1.1.1:9866
2020-12-03 07:21:27,580 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - GLOBAL serial map: bits=29 maxEntries=536870911
2020-12-03 07:21:27,580 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - USER serial map: bits=24 maxEntries=16777215
2020-12-03 07:21:27,581 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - GROUP serial map: bits=24 maxEntries=16777215
2020-12-03 07:21:27,581 [main] INFO  namenode.FSDirectory (SerialNumberManager.java:<clinit>(51)) - XATTR serial map: bits=24 maxEntries=16777215
2020-12-03 07:21:27,606 [main] INFO  BlockStateChange (BlockManager.java:processReport(2648)) - BLOCK* processReport 0x804f61e6680f: Processing first storage report for s1 from datanode 4f4c6b82-6213-4a65-8d2e-7264a025f7d6
2020-12-03 07:21:27,648 [main] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x804f61e6680f: from storage s1 node 1.1.1.1:9866, blocks: 24, hasStaleStorage: true, processing time: 43 msecs, invalidatedBlocks: 0
2020-12-03 07:21:27,653 [main] WARN  BlockStateChange (BlockManager.java:processReport(2773)) - BLOCK* processReport 0x804f648688d9: Report from the DataNode (4f4c6b82-6213-4a65-8d2e-7264a025f7d6) is unsorted. This will cause overhead on the NameNode which needs to sort the Full BR. Please update the DataNode to the same version of Hadoop HDFS as the NameNode (3.2.1).
2020-12-03 07:21:27,655 [main] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x804f648688d9: from storage s1 node 1.1.1.1:9866, blocks: 24, hasStaleStorage: true, processing time: 6 msecs, invalidatedBlocks: 0
2020-12-03 07:21:27,657 [main] INFO  BlockStateChange (BlockManager.java:processReport(2677)) - BLOCK* processReport 0x804f64ec637a: from storage s1 node 1.1.1.1:9866, blocks: 24, hasStaleStorage: true, processing time: 0 msecs, invalidatedBlocks: 0
msx-rc 0
