SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/root/.m2/repository/org/slf4j/slf4j-log4j12/1.7.25/slf4j-log4j12-1.7.25.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/root/.m2/repository/ch/qos/logback/logback-classic/1.1.2/logback-classic-1.1.2.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-12-03 07:20:01,236 [main] WARN  hdfs.DFSUtilClient (DFSUtilClient.java:getAddressesForNameserviceId(442)) - Namenode for mycluster-140993325 remains unresolved for ID nn1. Check your hdfs-site.xml file to ensure namenodes are configured properly.
2020-12-03 07:20:01,241 [main] WARN  hdfs.DFSUtilClient (DFSUtilClient.java:getAddressesForNameserviceId(442)) - Namenode for mycluster-140993325 remains unresolved for ID nn2. Check your hdfs-site.xml file to ensure namenodes are configured properly.
2020-12-03 07:20:01,300 [pool-1-thread-1] TRACE ha.RequestHedgingProxyProvider (RequestHedgingProxyProvider.java:call(133)) - Invoking method public abstract long[] org.apache.hadoop.hdfs.protocol.ClientProtocol.getStats() throws java.io.IOException on proxy machine1.foo.bar:8020
2020-12-03 07:20:01,301 [pool-1-thread-2] TRACE ha.RequestHedgingProxyProvider (RequestHedgingProxyProvider.java:call(133)) - Invoking method public abstract long[] org.apache.hadoop.hdfs.protocol.ClientProtocol.getStats() throws java.io.IOException on proxy machine2.foo.bar:8020
2020-12-03 07:20:01,306 [main] WARN  ha.RequestHedgingProxyProvider (RequestHedgingProxyProvider.java:logProxyException(225)) - Invocation returned exception on [machine2.foo.bar:8020]
java.io.IOException: Bad mock !!
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.hdfs.server.namenode.ha.RequestHedgingProxyProvider$RequestHedgingInvocationHandler$1.call(RequestHedgingProxyProvider.java:135)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2020-12-03 07:20:01,309 [main] TRACE ha.RequestHedgingProxyProvider (RequestHedgingProxyProvider.java:invoke(157)) - Unsuccessful invocation on [machine2.foo.bar:8020]
2020-12-03 07:20:02,304 [main] DEBUG ha.RequestHedgingProxyProvider (RequestHedgingProxyProvider.java:invoke(149)) - Invocation successful on [machine1.foo.bar:8020]
2020-12-03 07:20:02,305 [main] TRACE ha.RequestHedgingProxyProvider (RequestHedgingProxyProvider.java:invoke(171)) - Shutting down threadpool executor
msx-rc 0
